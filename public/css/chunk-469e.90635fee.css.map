{"version":3,"sources":["webpack:///src/router/views/src/router/views/Register.vue","webpack:///<no source>"],"names":[],"mappings":"AAkOA,wBClOA,yBAAA,kBAAA,kBAAA,qBAAA,aAAA,UAAA,CDoOA","file":"chunk-469e.90635fee.css","sourcesContent":["<template>\n  <Layout class=\"bg-green-linear\">\n    <div class=\"container mx-auto text-center my-4 md:my-8\">\n      <h1 class=\"font-sans font-thin text-5xl text-green-darker\">\n        Sign up\n      </h1>\n    </div>\n    <form\n      class=\"w-9/10 sm:w-2/3 md:w-1/2 lg:w-1/3 mx-auto flex flex-col p-10 bg-white rounded-xl shadow-md mb-12\"\n      @submit.prevent=\"register\"\n    >\n      <BaseInput\n        v-model=\"form.username\"\n        placeholder=\"Username\"\n        :error=\"validationErrors.username\"\n      />\n\n      <BaseInput\n        v-model=\"form.first_name\"\n        placeholder=\"First Name\"\n        :error=\"validationErrors.first_name\"\n      />\n\n      <BaseInput\n        v-model=\"form.last_name\"\n        placeholder=\"Last Name\"\n        :error=\"validationErrors.last_name\"\n      />\n\n      <BaseInput\n        v-model=\"form.email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        :error=\"validationErrors.email\"\n      />\n\n      <PlaceInput\n        v-model=\"form.address.address_1\"\n        type=\"text\"\n        :error=\"validationErrors.address_1\"\n        placeholder=\"Address, Country, Postcode\"\n        @change=\"onComplete\"\n      />\n\n      <BaseInput\n        v-show=\"form.address.address_2\"\n        v-model=\"form.address.address_2\"\n        type=\"text\"\n        placeholder=\"Country\"\n        :error=\"validationErrors.address_2\"\n      />\n\n      <BaseInput\n        v-show=\"form.address.country\"\n        v-model=\"form.address.country\"\n        type=\"text\"\n        placeholder=\"Country\"\n        :error=\"validationErrors.country\"\n      />\n\n      <BaseInput\n        v-show=\"form.address.city\"\n        v-model=\"form.address.city\"\n        type=\"text\"\n        placeholder=\"City\"\n        :error=\"validationErrors.city\"\n      />\n\n      <BaseInput\n        v-show=\"form.address.postcode\"\n        v-model=\"form.address.postcode\"\n        type=\"text\"\n        placeholder=\"Postcode\"\n        :error=\"validationErrors.postcode\"\n      />\n\n      <BasePassword\n        v-model=\"form.password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        :error=\"validationErrors.password\"\n      />\n\n      <BaseButton\n        class=\"rounded p-4 my-2\"\n        :disabled=\"load\"\n        type=\"submit\"\n      >\n        <BaseIcon\n          v-if=\"load\"\n          name=\"spinner\"\n          spin\n        />\n        <span v-else>\n          Register\n        </span>\n      </BaseButton>\n\n      <p\n        v-if=\"authError\"\n        class=\"py-4 text-red text-sm text-center\"\n      >\n        {{ authError }}\n      </p>\n\n      <p class=\"py-4 text-center\">\n        <router-link\n          to=\"/login\"\n          class=\"text-sm text-grey-darkest outline-none hover:text-blue-dark\"\n        >\n          Have an account? Sign In\n        </router-link>\n      </p>\n    </form>\n  </Layout>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Layout from '@layouts/Main'\nimport PlaceInput from 'vue-places'\nimport { geoip } from '@utils/geoip'\nimport { head, mapValues } from 'lodash'\nimport { mapActions } from 'vuex'\nimport { success } from '@utils/toast'\n\nexport default {\n  page: {\n    title: 'Register',\n    meta: [{ name: 'description', content: 'Register' }],\n  },\n\n  components: { Layout, PlaceInput },\n\n  data () {\n    return {\n      form: {\n        username: '',\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        address: {\n          address_1: '',\n          address_2: '',\n          city: '',\n          country: '',\n          country_code: '',\n        },\n        dob: '',\n      },\n      load: false,\n      validationErrors: {},\n      authError: '',\n    }\n  },\n\n  async mounted () {\n    this.validationErrors = Object.assign({}, this.form)\n    console.log(await geoip())\n  },\n\n  methods: {\n    ...mapActions({\n      signup: 'auth/signUp',\n    }),\n\n    onComplete(response) {\n      let {country, postcode, value, name, countryCode} = response\n\n      this.form.address = {\n        address_1: value,\n        address_2: name,\n        country: country,\n        postcode: postcode,\n        country_code: countryCode\n      }\n    },\n\n    async validate () {\n      try {\n        await axios.post('signup/validate', this.form)\n      } catch ({ response: { data: { errors }} }) {\n        this.validationErrors = mapValues(errors, (errors) => {\n          return head(errors)\n        })\n\n        this.load = false\n\n        return false\n      }\n\n      return true\n    },\n\n    async register () {\n      this.load = true\n\n      const valid = await this.validate()\n\n      if (valid) {\n        this.signup({\n          data: Object.assign(this.form, {\n            name: `${this.form.first_name} ${this.form.last_name}`,\n          }),\n          cb: (err) => {\n            this.load = false\n\n            if (!err) {\n              success({\n                text: 'User account created.'\n              })\n\n              this.$router.push({ name: 'login' })\n            } else {\n              this.authError = err\n            }\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/deep/ input {\n  @apply bg-grey-lighter rounded my-3 p-4 w-full\n}\n\n.ap-input {\n  height: 50px;\n  @apply border-none;\n}\n\n.ap-icon-clear {\n  width: 12px;\n  height: 12px;\n  top: 30px;\n  cursor: pointer;\n}\n</style>\n",null]}